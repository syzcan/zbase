<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.directwebremoting.org/schema/spring-dwr   
      http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd  
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<mvc:annotation-driven />

	<!-- 使用注解的包，包括子集 -->
	<context:component-scan base-package="com.zong.**.controller" />

	<!-- 加上conversion-service是对spring mvc注入表单日期进行转换，解决400错误 -->
	<mvc:annotation-driven conversion-service="conversionService" />
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.zong.util.SpringDateConverter" />
			</list>
		</property>
	</bean>
	<!-- 访问静态文件映射 -->
	<mvc:resources mapping="/plugins/**" location="/plugins/" />
	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:resources mapping="/upload/**" location="/upload/" />
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!-- <bean class="com.zong.interceptor.LoginHandlerInterceptor" /> -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<!-- 访问静态文件不拦截 -->
			<mvc:exclude-mapping path="/plugins/**" />
			<mvc:exclude-mapping path="/static/**" />
			<mvc:exclude-mapping path="/upload/**" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.zong.interceptor.LoginHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 多视图解析器 -->
	<!-- 配置thymeleaf视图解析器 -->
	<bean id="thymeleafResolver"
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="suffix" value=".html" />
		<property name="prefix" value="/WEB-INF/thymeleaf/" />
		<property name="templateMode" value="HTML5" />
		<property name="cacheable" value="false" />
	</bean>
	<bean id="thymeleafEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="thymeleafResolver" />
	</bean>
	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="viewNames">
			<list>
				<value>/th/**</value>
			</list>
		</property>
		<property name="order" value="1" />
		<property name="templateEngine" ref="thymeleafEngine" />
		<!--解决中文乱码 -->
		<property name="characterEncoding" value="utf-8" />
	</bean>

	<!-- 配置beetl视图解析器 -->
	<bean id="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init">
		<!-- <property name="configFileResource" value="/WEB-INF/beetl.properties"/> -->
	</bean>
	<bean id="beetlViewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<!-- 多视图解析器，需要设置viewNames和order -->
		<property name="viewNames">
			<list>
				<!-- 以/demo开头的是beetlViewResolver来渲染 -->
				<value>/demo/**</value>
			</list>
		</property>
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="2" />
		<!-- beetl配置不支持前缀，这不同于jsp 和 freemaker -->
		<property name="suffix" value=".html" />
		<!-- 多GroupTemplate，需要指定使用的bean -->
		<property name="config" ref="beetlConfig" />
	</bean>
	<!-- 配置jsp视图解析器 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="3" />
		<property name="suffix" value=".jsp" />
		<property name="prefix" value="/WEB-INF/jsp/" />
	</bean>

	<!-- 上传文件拦截，设置最大上传文件大小 200M=200*1024*1024(B)=209715200 bytes -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200" />
	</bean>

</beans>
	